{"version":3,"file":"static/js/42.1c3f4806.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/App.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","redux/filter/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.isLoading;\n\n// export const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.contacts;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  padding: 4em;\n  border-radius: 10px;\n  background-color: ;\n  max-width: 400px;\n  margin: auto;\n  background-color: beige;\n`;\n","import styled from 'styled-components';\nexport const H2 = styled.h2`\n  margin-bottom: 10px;\n`;\n","import { H2 } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      <H2>{title}</H2>\n      {children}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 350px;\n\n  border: 1px solid;\n  border-radius: 10px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px 10px;\n  max-width: 200px;\n\n  background-color: #f6bb8a;\n`;\nexport const Button = styled.button`\n  max-width: 150px;\n`;\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport function ContactForm() {\n  const loginInputId = nanoid();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (!contacts) return;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    )\n      return alert(`${name} is alredy in contacts`);\n    dispatch(addContacts({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={loginInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label htmlFor={loginInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>{' '}\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\nexport const Input = styled.input`\n  padding: 5px 10px;\n  width: 200px;\n\n  background-color: #f6bb8a;\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { changeFilter } from '../../redux/filter/slice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Фильтр по имени\n      <Input\n        type=\"text\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-left: 10px;\n  max-width: 450px;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  gap: 10px;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const P = styled.p`\n  font-size: 20px;\n`;\nexport const Span = styled.span`\n  font-size: 20px;\n`;\nexport const Button = styled.button`\npadding: 5px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 200ms;\n\n  &:hover {\n    color: red;\n  }\n}\n`;\n","export const selectFilters = state => state.filters.filter;\n","import { Ul, Li, Div, P, Span, Button } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters } from 'redux/filter/selectors';\nimport { selectAllContacts, selectLoading } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const ContactList = () => {\n  const filter = useSelector(selectFilters);\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n  const Loading = useSelector(selectLoading);\n\n  if (!contacts) return;\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      <Ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <Li key={id}>\n            <Div>\n              <BsTelephone />\n              <P>{name}:</P>\n            </Div>\n            <Span>{number}</Span>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContacts(id))}\n              disabled={Loading}\n            >\n              <AiFillDelete size={20} />\n            </Button>\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Wrapper } from 'components/App.styled';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <Wrapper className=\"Reviews\">\n        <Section title={'Phonebook'}>\n          <ContactForm />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter />\n          {isLoading && <div>Request in progress...</div>}\n          <ContactList />\n        </Section>\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectAllContacts","Wrapper","styled","H2","Section","title","children","Form","Label","Input","Button","ContactForm","loginInputId","nanoid","dispatch","useDispatch","useSelector","handleSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","find","contact","toLowerCase","alert","addContacts","reset","onSubmit","htmlFor","type","pattern","required","Filter","onChange","changeFilter","target","Ul","Li","Div","P","Span","selectFilters","filters","filter","ContactList","Loading","filteredContacts","includes","map","id","onClick","deleteContacts","disabled","size","Contacts","useEffect","fetchContacts","className"],"sourceRoot":""}